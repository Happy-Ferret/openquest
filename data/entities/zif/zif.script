#include "scripts\base.inc"

global WinMenu;

#include "interface\verbbar\verbbar_functions.inc"

var Zif = Scene.GetNode("zif_aimless");

var verb_default = "Talk to";

////////////////////////////////////////////////////////////////////////////////
on "LookAt"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;

  actor.Talk("My commanding officer, Commander Zif.");

  verb_cleanBar();
  Game.Interactive=true;

  if(Zif.X <= 195)
    {
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
  else   
    {
    Zif.PlayAnim("entities\Zif\rr\stand.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
}

////////////////////////////////////////////////////////////////////////////////
on "batteries"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;

  actor.Talk("Errm, no.");

  verb_cleanBar();
  Game.Interactive=true;

  if(Zif.X <= 195)
    {
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
  else   
    {
    Zif.PlayAnim("entities\Zif\rr\stand.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
}

////////////////////////////////////////////////////////////////////////////////
on "scanner"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;

  Zif.Talk("You're the scientist on this team. You use it.");

  verb_cleanBar();
  Game.Interactive=true;

  if(Zif.X <= 195)
    {
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
  else   
    {
    Zif.PlayAnim("entities\Zif\rr\stand.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
}

////////////////////////////////////////////////////////////////////////////////
on "Smell"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;

  actor.Talk("Is that a new cologne, sir?");
  Zif.Talk("I thought we got past these... feelings.");
  actor.Talk("Sorry sir.");

  verb_cleanBar();
  Game.Interactive=true;

  if(Zif.X <= 195)
    {
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
  else   
    {
    Zif.PlayAnim("entities\Zif\rr\stand.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
}

////////////////////////////////////////////////////////////////////////////////
on "Open"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;

  actor.Talk("He doesn't seem to open.");

  verb_cleanBar();
  Game.Interactive=true;

  if(Zif.X <= 195)
    {
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
  else   
    {
    Zif.PlayAnim("entities\Zif\rr\stand.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
}

////////////////////////////////////////////////////////////////////////////////
on "Move"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;

  actor.Talk("Moving him would accomplish nothing.");

  verb_cleanBar();
  Game.Interactive=true;

  if(Zif.X <= 195)
    {
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
  else   
    {
    Zif.PlayAnim("entities\Zif\rr\stand.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
}

////////////////////////////////////////////////////////////////////////////////
on "Use"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;

  actor.Talk("I don't know how to operate him.");

  verb_cleanBar();
  Game.Interactive=true;

  if(Zif.X <= 195)
    {
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
  else   
    {
    Zif.PlayAnim("entities\Zif\rr\stand.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
}

////////////////////////////////////////////////////////////////////////////////
on "gun"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;

if(Command.Verb == "Use")
  {
  actor.Talk("I don't need to shoot him.");
  } 
if(Command.Verb == "Give")
  {
  actor.Talk("And lose my advantage?");
  }

  verb_cleanBar();
  Game.Interactive=true;

  if(Zif.X <= 195)
    {
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
  else   
    {
    Zif.PlayAnim("entities\Zif\rr\stand.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
}

////////////////////////////////////////////////////////////////////////////////
on "keycard"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;

  Zif.Talk("Excellent work, Zob, a key.");
  Zif.Talk("Keep this. Use it to infiltrate the mainframe.");

  verb_cleanBar();
  Game.Interactive=true;

  if(Zif.X <= 195)
    {
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
  else   
    {
    Zif.PlayAnim("entities\Zif\rr\stand.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
}

////////////////////////////////////////////////////////////////////////////////
on "TalkTo"
{
  verb_setBar(Command.Verb + " "+self.Caption);

  var Responses;
  var Selected;
  GoToObject();

  Game.Interactive = false;

  Zif.Talk("Yes, ensign?");
  
  verb_changeMode(1);
  verb_cleanBar();

  var EndBranch = false;

  while(!EndBranch) // loop until the player ends this dialogue
  {  
    Game.AddResponse(0, "What are your orders?");
    if(CanAskZif == true)
    {
    Game.AddResponseOnce(1, "I require your assistance with this opening mechanism.");
    }
    Game.AddResponse(2, "I'll continue my search.");

    var Res = Game.GetResponse(true); // automatically select last response
    
    actor.Talk(Game.LastResponse);
    
    // handle the responses
    switch(Res)
    {
      case 0:
        Zif.Talk("Locate the stolen artifact.");
        actor.Talk("Any ideas where?");
        Zif.Talk("Study your surroundings.");
        Zif.Talk("Use all the cunning and guile at your disposal.");
        Zif.Talk("If you do this, you shall surely be successful.");
        actor.Talk("Guile. Right. Aye, sir.");
        Zif.Talk("Also, get a gun with which to shoot things.");
        break;
      case 1:
        Zif.Talk("Did you decipher its secrets?");
        actor.Talk("Yes, I believe two people are required.");
        Zif.Talk("In which case, I will follow you ensign.");
        ZifPlate = true;
        EndBranch = true;
        break;        
      case 2:
        Zif.Talk("Very good.");
        EndBranch = true;
        break;        
    }
  }
  verb_cleanBar();
  verb_changeMode(0);

  Game.Interactive=true;

  if(Zif.X <= 195)
    {
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
  else   
    {
    Zif.PlayAnim("entities\Zif\rr\stand.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\ll\walk.sprite");
    Zif.PlayAnim("entities\Zif\aimless.sprite");
    }
}

////////////////////////////////////////////////////////////////////////////////
on "LeftClick"
{
  if(Command.Verb == "")
  {
    GoToObject();
  }
}

////////////////////////////////////////////////////////////////////////////////
on "RightClick"
{
  verb_apply(verb_default);
}

////////////////////////////////////////////////////////////////////////////////
on "MouseEntry"
{
  verb_hover(verb_default);
}

////////////////////////////////////////////////////////////////////////////////
on "MouseLeave"
{
  verb_unhover(verb_default);
}

function GoToObject()
{
var GoToZifX = Zif.X - 30;

  actor.GoTo(GoToZifX, Zif.Y);
  actor.TurnTo(DI_RIGHT);
}
