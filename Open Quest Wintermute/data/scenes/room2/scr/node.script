#include "scripts\base.inc"

global WinMenu;

#include "interface\verbbar\verbbar_functions.inc"

var verb_default = "Look at";

////////////////////////////////////////////////////////////////////////////////
on "LookAt"
{
  verb_setBar(Command.Verb + " "+self.Caption);

  GoToObject();

  Game.Interactive=false;

  actor.Talk("It's my way out. But it's locked.");

  verb_cleanBar();

  Game.Interactive=true;
}

////////////////////////////////////////////////////////////////////////////////
on "TalkTo"
{
  verb_setBar(Command.Verb + " "+self.Caption);

  GoToObject();

  Game.Interactive=false;

  actor.Talk("Hello! Is anyone out there?");
  Sleep(100);
  actor.Talk("Looks like I have to find a way out myself!");

  verb_cleanBar();

  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "PickUp"
{
  verb_setBar(Command.Verb + " "+self.Caption);

  GoToObject();
  
  Game.Interactive=false;

  actor.Talk("I don't need that.");

  verb_cleanBar();

  Game.Interactive=true;
}

////////////////////////////////////////////////////////////////////////////////
on "Use"
{
  verb_setBar(Command.Verb + " "+self.Caption);

  GoToObject();

  Game.Interactive=false;

  actor.Talk("I can't reach it.");
  
  verb_cleanBar();

  Game.Interactive=true;
}

////////////////////////////////////////////////////////////////////////////////
on "Open"
{
  verb_setBar(Command.Verb + " "+self.Caption);

  GoToObject();

  Game.Interactive=false;

  actor.Talk("I can't reach it.");
  
  verb_cleanBar();

  Game.Interactive=true;
}

////////////////////////////////////////////////////////////////////////////////
on "Move"
{
  verb_setBar(Command.Verb + " "+self.Caption);

  GoToObject();

  Game.Interactive=false;

  actor.Talk("I can't reach it.");
  
  verb_cleanBar();

  Game.Interactive=true;
}

////////////////////////////////////////////////////////////////////////////////
on "Smell"
{
  verb_setBar(Command.Verb + " "+self.Caption);

  GoToObject();

  Game.Interactive=false;

  actor.Talk("I can't reach it.");
  
  verb_cleanBar();

  Game.Interactive=true;
}

////////////////////////////////////////////////////////////////////////////////
on "Give"
{  
  verb_cleanBar();
}

////////////////////////////////////////////////////////////////////////////////
on "ammunition"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();
  actor.Talk("That doesn't take ammo.");
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "gun"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();
  if(EncryptionBroken != true) actor.Talk("The suspension cage prevents a clear shot of the node.");
  if(EncryptionBroken == true && LoadedWeapon != true) actor.Talk("The weapon is not loaded.");
  if(EncryptionBroken == true && LoadedWeapon == true)
  {
  Game.PlayMusicChannel(3, "sound/sound13.wav", false);
  actor.SkipTo(114, 83);
  actor.PlayAnim("actors/zob/rr/shoot.sprite");
  actor.SkipTo(105, 90);
  Game.StopMusicChannel(3);

  actor.Talk("Missed.");
  actor.Talk("I'm not familiar with the aiming reticule.");
  ShotAtNode = true;
  }
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "batteries"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();
  actor.Talk("I don't know what to do with those.");
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "keycard"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;
  GoToObject();

  actor.Talk("Doesn't look like that takes keycards.");
  verb_cleanBar();
  Game.Interactive=true;
}

////////////////////////////////////////////////////////////////////////////////
on "LeftClick"
{
  if(Command.Verb == "")
  {
    GoToObject();
  }
}

////////////////////////////////////////////////////////////////////////////////
on "RightClick"
{
  verb_apply(verb_default);
}

////////////////////////////////////////////////////////////////////////////////
on "MouseEntry"
{
  verb_hover("Look at");
}

////////////////////////////////////////////////////////////////////////////////
on "MouseLeave"
{
  verb_unhover("Look at");
}

function GoToObject()
{
actor.GoTo(105, 90);
actor.TurnTo(DI_RIGHT);
}

