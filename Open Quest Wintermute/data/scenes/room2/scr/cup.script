#include "scripts\base.inc"

global WinMenu;

#include "interface\verbbar\verbbar_functions.inc"

var verb_default = "Look at";

////////////////////////////////////////////////////////////////////////////////
on "LookAt"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();

  actor.Talk("The holy artifact!");
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "TalkTo"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();

  actor.Talk("I don't know how to communicate with that.");
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "Smell"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();

  actor.Talk("That has no odour.");
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "Open"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();

  actor.Talk("That doesn't seem to open.");
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "ammunition"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();
  actor.Talk("That doesn't take ammo.");
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "gun"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();
  actor.Talk("I don't need to shoot that.");
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "batteries"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();
  actor.Talk("I don't know what to do with those.");
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "keycard"
{
  verb_setBar(Command.Verb + " "+self.Caption);
  GoToObject();
  Game.Interactive=false;
  GoToObject();

  actor.Talk("Doesn't look like that takes keycards.");
  verb_cleanBar();
  Game.Interactive=true;
}

////////////////////////////////////////////////////////////////////////////////


on "PickUp"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();
  if(EncryptionBroken != true) actor.Talk("The artifact is protected by some kind of forcefield container.");
  else actor.Talk("The artifact is still being held in place.");
  
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////

on "Give"
{
  GoToObject();
  verb_cleanBar();
}

on "Move"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();
  actor.Talk("Moving that would accomplish nothing.");
  verb_cleanBar();
  Game.Interactive = true;
}

on "Use"
{
  verb_setBar(Command.Verb + " " + Command.Object1_caption);
  Game.Interactive = false;
  GoToObject();
  actor.Talk("I don't know how to operate that.");
  verb_cleanBar();
  Game.Interactive = true;
}

////////////////////////////////////////////////////////////////////////////////
on "RightClick"
{
  verb_apply(verb_default);
}

////////////////////////////////////////////////////////////////////////////////
on "MouseEntry"
{
  verb_hover("Look at");
}

////////////////////////////////////////////////////////////////////////////////
on "MouseLeave"
{
  verb_unhover("Look at");
}

////////////////////////////////////////////////////////////////////////////////
on "LeftClick"
{
  GoToObject();
}

////////////////////////////////////////////////////////////////////////////////
function GoToObject()
{
actor.GoTo(152, 104);
actor.TurnTo(DI_DOWN);
}
